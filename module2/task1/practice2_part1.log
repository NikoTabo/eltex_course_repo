ssh-keygen
ssh-copy-id -i ~/keyMyKey.pub root@172.16.9.179
useradd -m -s /bin/bash user1
adduser user3
usermod -s /usr/sbin/nologin user3
su -s /bin/bash user3
groupadd myGroup
usermod -aG myGroup user3
#добавляем каждого пользователя в группу
cat /etc/group | grep user
mkdir /opt/share
chown :myGroup /opt/share
sudo chmod g+rwx /opt/share
sudo chmod g+s /opt/share
#теперь все файлы, создаваемые в каталоге принадлежат группе. Это можно посмотреть введя ls -l название_файла
nano .bashrc
#в конец файла добавляем маску 007, забирающую права для "прочих"
./bashrc
touch fileUser1
rm fileUser1
#файл пользователя user1 был успешно удален пользователем user2
chmod +t /opt/share
touch fileUser1
rm fileUser1
#rm: cannot remove 'fileUser1.txt': Operation mot permitted
nano /etc/sudoers
#В файле выдаем все права user1, чтобы работало sudo
sudo dmesg
#[    0.000000] Linux version 6.8.0-55-generic (buildd@lcy02-amd64-095) (x86_64-linux-gnu-gcc-13 (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0, GNU ld (GNU Binutils for Ubuntu) 2.42) #57-Ubuntu SMP PREEMPT_DYNAMIC Wed Feb 12 23:42:21 UTC 2025 (Ubuntu 6.8.0-55.57-generic 6.8.12)
nano myScript.sh
#создаем скрипт в директории пользователя user2
chmod +x myScript.sh
chmod u+s myScript.sh
#Выдаем права выполнения этого скрипта и устанавливаем SUID, чтобы скрипт запускал от имени создателя скрипта (в моем случае root)
./myScript.sh
#dmesg: read kernel buffer failed: Operation not permitted
#Несмотря на то, что был выдан SUID, команда не будет выполняться, т.к. установка SUID на скриптах опасна, поэтому система не позволит выполнять такие скрипты не владельцам
for user in $(getent passwd | grep '^user' | cut -d: -f1); do sudo chage -M 10 $user; done
#данной командой мы из getent passwd достаем каждого пользователя начинающегося на user, а потом командой sudo chage -M 10 устаналиваем время действия пароля
sudo chage -l user1
#Last password change                                    : Mar 13, 2025
#Password expires                                        : Mar 23, 2025
#Password inactive                                       : never
#Account expires                                         : never
#Minimum number of days between password change          : 0
#Maximum number of days between password change          : 10
#Number of days of warning before password expires       : 7
nano /etc/motd
rsync -a /etc/ /root/etc_backup/
sudo tar -czf /root/etc_backup.tar.gz -C /root etc_backup
apt update
apt install bzip2
sudo tar -cjf /root/etc_backup.tar.bz2 -C /root etc_backup
apt install 7zip
sudo tar -cf - -C /root etc_backup | 7z a -si /root/etc_backup.tar.7z
ls -lh etc_backup.tar.*
#-rw-r--r-- 1 root root 475K Apr  9 02:25 etc_backup.tar.7z
#-rw-r--r-- 1 root root 547K Apr  9 02:35 etc_backup.tar.bz2
#-rw-r--r-- 1 root root 581K Apr  9 02:19 etc_backup.tar.gz
date >> /etc/motd
cat /etc/motd
#Nikita Bolotenko
#Thu Apr 10 07:31:29 AM UTC 2025
rsync -a --delete /etc/ /root/etc_backup/
tar -czf motd.tar.gz /etc/motd
tar -tjf etc_backup.tar.bz2 | sort > zipped_files
find /root/etc_backup -type f | sed 's|^/root/||' | sort > backup_files
diff zipped_files backup_files
mkdir -p /root/etc_backup_gzip
tar -xzf etc_backup.tar.gz -C /root/etc_backup_gzip
mkdir -p /root/etc_backup_7zip
7z x etc_backup.tar.7z -o/root/etc_backup_7zip
tar -xf /root/etc_backup_7zip/etc_backup.tar -C /root/etc_backup_7zip
diff /root/etc_backup_gzip/etc_backup/motd /root/etc_backup_7zip/etc_backup/motd
